package android.coding.ourapp.adapterimport android.coding.ourapp.data.datasource.model.Studentimport android.coding.ourapp.databinding.ListItemStudentBindingimport android.coding.ourapp.helper.StudentDiffCallbackimport android.coding.ourapp.presentation.ui.CreateUpdateStudentActivityimport android.coding.ourapp.presentation.ui.CreateUpdateStudentActivity.Companion.EXTRA_STUDENTimport android.content.Intentimport android.view.LayoutInflaterimport android.view.ViewGroupimport androidx.appcompat.app.AlertDialogimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.RecyclerViewclass StudentAdapter : RecyclerView.Adapter<StudentAdapter.StudentViewHolder>() {    private val listStudent = ArrayList<Student>()    private var onDeleteClickListener: OnDeleteClickListener? = null    fun setOnDeleteClickListener(listener: OnDeleteClickListener) {        onDeleteClickListener = listener    }    fun setListStudent(listStudent: List<Student>) {        val diffCallback = StudentDiffCallback(this.listStudent, listStudent)        val diffResult = DiffUtil.calculateDiff(diffCallback)        this.listStudent.clear()        this.listStudent.addAll(listStudent)        diffResult.dispatchUpdatesTo(this)    }    override fun onCreateViewHolder(        parent: ViewGroup,        viewType: Int    ): StudentAdapter.StudentViewHolder {        val binding =            ListItemStudentBinding.inflate(LayoutInflater.from(parent.context), parent, false)        return StudentViewHolder(binding)    }    override fun onBindViewHolder(holder: StudentAdapter.StudentViewHolder, position: Int) {        holder.bind(listStudent[position])    }    override fun getItemCount(): Int = listStudent.size    inner class StudentViewHolder(private val binding: ListItemStudentBinding) :        RecyclerView.ViewHolder(binding.root) {        fun bind(student: Student) {            with(binding) {                tvTittle.text = student.nameStudent                tvCompany.text = student.company                tvGroup.text = student.group                btnUpdate.setOnClickListener {                    val intent = Intent(it.context, CreateUpdateStudentActivity::class.java)                    intent.putExtra(EXTRA_STUDENT, student)                    it.context.startActivity(intent)                }                btnDelete.setOnClickListener {                    val context = it.context                    AlertDialog.Builder(context)                        .setTitle("Konfirmasi")                        .setMessage("Apakah Anda yakin ingin menghapus data ini?")                        .setPositiveButton("Ya") { dialog, _ ->                            onDeleteClickListener?.onDeleteClick(student)                            dialog.dismiss()                        }                        .setNegativeButton("Batal") { dialog, _ ->                            dialog.dismiss()                        }                        .show()                }            }        }    }    interface OnDeleteClickListener {        fun onDeleteClick(student: Student)    }}